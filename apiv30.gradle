import static org.apache.tools.ant.taskdefs.condition.Os.*
apply plugin: 'java'
apply plugin: 'war'


sourceSets{
  main{
    java{
      srcDirs 'src/edu/asu/epilepsy/apiv30'

    }
  }
}

task deployDAO (type: Copy, dependsOn: compileJava) {
  from 'src/edu/asu/epilepsy/apiv30/dao/dao.properties'
  into 'build/classes/java/main/edu/asu/epilepsy/apiv30/dao'
}

task deployQuestionProperties (type: Copy, dependsOn: deployDAO) {
  from 'src/edu/asu/epilepsy/apiv30/model/questionOption.properties'
  into 'build/classes/java/main/edu/asu/epilepsy/apiv30/model'
}

task setDBConfig (dependsOn: deployQuestionProperties) {
  doLast{
    ant.propertyfile(file: "build/classes/java/main/edu/asu/epilepsy/apiv30/dao/dao.properties"){
      entry(key : "jdbc.url", value : jdbcurl)
      entry( key : "jdbc.user", value : jdbcusername)
      entry( key : "jdbc.passwd", value : jdbcpassword)
    }
  }
}

task apidoc(type: Exec) {
  if (isFamily(FAMILY_MAC)){
    commandLine 'sh', '-c', 'apidoc -i ./src -o ./apidocs/'
  }else if(isFamily(FAMILY_WINDOWS)){
    commandLine 'cmd', '/c', 'apidoc -i ./src -o ./apidocs/'
  }else if (isFamily(FAMILY_UNIX)){
    commandLine 'apidoc -i ./src -o ./apidocs/'
  }
}

war {
  from './apidocs' // adds apidocs to war
  webXml = file('WebContent/WEB-INF/web.xml')
  archiveName 'v30.war'
}

task CleanUp (type: Delete){
  delete 'build/classes/java/main/edu/asu/epilepsy/apiv30'
}

task deployWar(type: Copy, dependsOn: war){
  from 'build/libs/v30.war'
  into tomcatwebappsdirectory
}

repositories {
  flatDir {
    dirs 'lib'
  }
}

dependencies {
  compile fileTree(dir: 'WebContent/WEB-INF/lib', include: '*.jar')
}

